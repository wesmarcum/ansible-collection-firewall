---
- name: Template dynamic block script
  ansible.builtin.template:
    src: "usr/local/bin/dynamic_block.sh.j2"
    dest: "/usr/local/bin/dynamic_block.sh"
    owner: root
    group: wheel
    mode: '0755'
  become: true

- name: Check dynamic block file
  ansible.builtin.stat:
    path: "{{ firewall_unbound_path }}/dynamic_block.conf"
  register: dynamic_block

- name: Check for local allow list
  ansible.builtin.stat:
    path: "files/usr/local/etc/unbound/dynamic_block_allow.conf"
  delegate_to: localhost
  register: dynamic_block_local_allow

- name: Copy dynamic block allow list (if exists)
  ansible.builtin.copy:
    src: "files/usr/local/etc/unbound/dynamic_block_allow.conf"
    dest: "{{ firewall_unbound_path }}/dynamic_block_allow.conf"
    owner: unbound
    group: wheel
    mode: '0640'
  become: true
  when: dynamic_block_local_allow.stat.exists and firewall_unbound_dynamic_block_allowlist | bool
  notify:
    - run dynamic block script

- name: Remove dynamic block allow list (if disabled)
  ansible.builtin.file:
    path: "{{ firewall_unbound_path }}/dynamic_block_allow.conf"
    state: absent
  become: true
  when: firewall_unbound_dynamic_block_allowlist | bool is false
  notify:
    - run dynamic block script

- name: Run dynamic block script
  ansible.builtin.command:
    cmd: "/usr/local/bin/dynamic_block.sh"
  when: not dynamic_block.stat.exists or dynamic_block.stat.size | int < 10
  changed_when: true
  become: true
  notify: reload unbound

- name: Set cron to update dynamic block list
  ansible.builtin.cron:
    name: "Update dynamic block list"
    minute: "{{ 59 | random(seed=ansible_hostname) }}"
    hour: "{{ range(20, 23, 1) | random(seed=ansible_hostname) }}"
    user: unbound
    job: "/usr/local/bin/dynamic_block.sh"
  become: true
