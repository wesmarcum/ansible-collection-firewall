---
- name: Install common packages
  ansible.builtin.package:
    name: "{{ firewall_common_packages }}"
    state: present
  become: true
  tags:
    - base

# Dynamically set facts from variables.
# This is used to get a list of dhcp enabled interfaces.
- name: Import "setfacts.yml" tasks
  ansible.builtin.import_tasks: "tasks/setfacts.yml"
  tags:
    - always

# Set up network interfaces and other rc files.
- name: Set up networking
  ansible.builtin.import_tasks: "tasks/rc.yml"
  tags:
    - base
    - rc
    - network
    - routing

- name: flush handlers
  ansible.builtin.meta: flush_handlers

# Enable pf and copy ruleset.
- name: Enable pf
  ansible.builtin.import_tasks: "tasks/pf.yml"
  tags:
    - base
    - firewall
    - pf

- name: flush handlers
  ansible.builtin.meta: flush_handlers

# Enable geo ip blocking.
- name: Enable geoip blocking
  ansible.builtin.include_tasks:
    file: "tasks/geoip.yml"
    apply:
      tags:
        - base
        - geoip
  when: firewall_geoip_enable | bool
  tags:
    - base
    - geoip

# Disable geo ip blocking.
- name: Disable geoip blocking
  ansible.builtin.include_tasks:
    file: "tasks/geoip_disable.yml"
    apply:
      tags:
        - base
        - geoip
  when: firewall_geoip_enable | bool is false
  tags:
    - base
    - geoip

# Enable dhcp6c for ipv6 dhcp interfaces.
- name: Enable dhcp6c
  ansible.builtin.import_tasks: "tasks/dhcp6c.yml"
  tags:
    - base
    - dhcp6c

# Install radvd for ipv6 route advertisements.
- name: Enable radvd
  ansible.builtin.include_tasks:
    file: "tasks/radvd.yml"
    apply:
      tags:
        - base
        - radvd
  when: firewall_radvd_enable | bool
  tags:
    - base
    - radvd

# Disable radvd when firewall_radvd_enable is set to false.
- name: Disable radvd
  ansible.builtin.include_tasks:
    file: "tasks/radvd_disable.yml"
    apply:
      tags:
        - base
        - radvd
  when: firewall_radvd_enable | bool is false
  tags:
    - base
    - radvd

# Set cron to run freebsd-update.
- name: Set cron to run freebsd-update
  ansible.builtin.cron:
    name: "freebsd-update"
    minute: "{{ 59 | random(seed=ansible_hostname) }}"
    hour: "{{ 5 | random(seed=ansible_hostname) }}"
    job: "/usr/sbin/freebsd-update cron"
    user: root
  become: true
  tags:
    - base

# Enable microcode updates
- name: Enable microcode updates
  ansible.builtin.include_tasks:
    file: "tasks/microcode_enable.yml"
    apply:
      tags:
        - base
        - microcode
  when: firewall_microcode_updates_enable | bool
  tags:
    - base
    - microcode

# Enable microcode updates
- name: Disable microcode updates
  ansible.builtin.include_tasks:
    file: "tasks/microcode_disable.yml"
    apply:
      tags:
        - base
        - microcode
  when: firewall_microcode_updates_enable | bool is false
  tags:
    - base
    - microcode

# Template the smartd configuration
- name: Template smartd configuration
  ansible.builtin.template:
    src: "templates/usr/local/etc/smartd.conf.j2"
    dest: "/usr/local/etc/smartd.conf"
    owner: root
    group: wheel
    mode: 0644
  become: true
  when: firewall_smartd_enable | bool
  tags:
    - base

# Start the smartd service
- name: Start the smartd service
  ansible.builtin.service:
    name: smartd
    state: started
  become: true
  when: firewall_smartd_enable | bool
  tags:
    - base
